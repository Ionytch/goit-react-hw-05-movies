{"version":3,"file":"static/js/992.ac3c5867.chunk.js","mappings":"iNAEaA,EAAiBC,EAAAA,GAAAA,GAAH,gFAMdC,EAAYD,EAAAA,GAAAA,GAAH,gD,SCgBtB,EAnBkB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACXC,GAASC,EAAAA,EAAAA,MAGf,OADAC,QAAQC,IAAIJ,EAAKK,KAEb,+BACA,SAACR,EAAD,WACQ,SAACE,EAAD,WACI,SAAC,KAAD,CAAMO,GAAE,kBAAaN,EAAKK,IAAME,MAAO,CAACC,KAAKP,GAA7C,SAAyDD,EAAKS,SADlDT,EAAKK,OAMpC,C,oHCaD,EAzBwB,SAAC,GAAe,IAAdK,EAAa,EAAbA,QACtB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OARAC,EAAAA,EAAAA,YAAU,WACDJ,IACLK,EAAAA,EAAAA,IAAmB,CAACL,QAAAA,IACfM,MAAK,SAAAhB,GAAI,OAAIa,EAAUb,EAAKiB,QAAnB,IACTC,OAAM,SAAAC,GACHhB,QAAQC,IAAI,gBAAiBe,EAAMC,QACtC,GACR,GAAE,CAACV,KAEA,8BAEIE,EAAOS,KAAI,SAAAC,GAAI,OAAE,SAAC,IAAD,CAAyBtB,KAAMsB,GAAfA,EAAKjB,GAAvB,KAI1B,E,QCeD,EApCkB,WAAO,IAAD,EAEpB,GAAoCkB,EAAAA,EAAAA,MAApC,eAAMC,EAAN,KAAmBC,EAAnB,KACMf,EAAO,UAAGc,EAAaE,IAAI,kBAApB,QAAkC,GAC/CvB,QAAQC,IAAIM,GAgBZ,OACI,iCACA,0BACI,kBAAMiB,SAfE,SAAAC,GAChBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAkBF,EAAKG,SAASC,OAAOC,MAAMC,OAAOC,cAE1DZ,EAAoC,KAApBO,EAAyB,CAAEtB,QAASsB,GAAoB,CAAC,GAEzEF,EAAKQ,OACJ,EAMO,WACJ,kBAAOC,KAAK,OAAOC,KAAK,YACpB,mBAAQD,KAAK,SAAb,0BAMA,SAAC,EAAD,CAAiB7B,QAASA,MAGpC,C","sources":["components/moviepage/Movielist.styled.js","components/moviepage/Movielist.js","components/moviepage/Moviesearch.js","pages/Moviepage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovielistStyle = styled.ul`\nlist-style: none;\nfont-size: 40px,\nfont-weight: 500;\n`\n\nexport const MovieItem = styled.li`\ntext-decoration: none;\n`","import { Link, useLocation } from \"react-router-dom\";\nimport { MovieItem, MovielistStyle } from \"./Movielist.styled\";\nimport PropTypes from \"prop-types\";\n\n\nconst MovieList = ({ data }) => {\n    const location=useLocation();\n\n    console.log(data.id);\n    return (\n        <>\n        <MovielistStyle >\n                <MovieItem key={data.id}>\n                    <Link to={`/movies/${data.id}`} state={{from:location}}>{data.title }</Link>\n                </MovieItem>\n            </MovielistStyle>\n        </>\n    )\n}\n\nMovieList.propTypes={\n    data: PropTypes.array.isRequired,\n};\n\nexport default MovieList;","import { getMoviesByRequest } from \"components/api/Api\";\nimport { useEffect, useState } from \"react\";\nimport MovieList from \"./Movielist\";\nimport PropTypes from \"prop-types\";\n\n\nconst MovieSearchList = ({request}) => {\n    const [movies, setMovies] = useState([]);\n        \n     \n    useEffect(() => {\n        if (!request) { return };\n        getMoviesByRequest({request})\n            .then(data => setMovies(data.results))\n            .catch(error => {\n                console.log('error.message', error.message);\n            });\n    }, [request]);\n    return (\n        <>\n         {\n            movies.map(item=><MovieList key={item.id} data={item} />)\n        }\n        </>\n    )\n}\n\nMovieSearchList.propTypes={\n    request: PropTypes.string.isRequired,\n};\n\nexport default MovieSearchList;","\nimport MovieSearchList from \"components/moviepage/Moviesearch\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst MoviePage = () => {\n    \n    const[searchParams,setSearchParams]=useSearchParams();\n    const request = searchParams.get('request') ?? '';\n    console.log(request);\n\n    \n        \nconst updateQuery = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const normalizedQuery = form.elements.search.value.trim().toLowerCase();\n\n    setSearchParams(normalizedQuery !== '' ? { request: normalizedQuery } : {});\n\n    form.reset();\n    };\n    \n       \n    return (\n        <>\n        <div>\n            <form onSubmit={updateQuery}>\n        <input type=\"text\" name=\"search\"  />    \n            <button type=\"submit\" >\n      Search\n    </button>\n    \n    </form>\n        </div>\n            <MovieSearchList request={request}></MovieSearchList>\n        </>\n    )\n }\n\nexport default MoviePage;\n"],"names":["MovielistStyle","styled","MovieItem","data","location","useLocation","console","log","id","to","state","from","title","request","useState","movies","setMovies","useEffect","getMoviesByRequest","then","results","catch","error","message","map","item","useSearchParams","searchParams","setSearchParams","get","onSubmit","e","preventDefault","form","currentTarget","normalizedQuery","elements","search","value","trim","toLowerCase","reset","type","name"],"sourceRoot":""}